/*
 * generated by Xtext
 */
grammar InternalWhileCpp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.WhileCppGrammarAccess;

}

@parser::members {
 
 	private WhileCppGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WhileCppGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getFonctionsAssignment()); }
(rule__Program__FonctionsAssignment)*
{ after(grammarAccess.getProgramAccess().getFonctionsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getGroup()); }
(rule__Definition__Group__0)
{ after(grammarAccess.getDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInput
entryRuleInput 
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputAccess().getGroup()); }
(rule__Input__Group__0)
{ after(grammarAccess.getInputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutput
entryRuleOutput 
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputAccess().getGroup()); }
(rule__Output__Group__0)
{ after(grammarAccess.getOutputAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVars
entryRuleVars 
:
{ before(grammarAccess.getVarsRule()); }
	 ruleVars
{ after(grammarAccess.getVarsRule()); } 
	 EOF 
;

// Rule Vars
ruleVars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarsAccess().getGroup()); }
(rule__Vars__Group__0)
{ after(grammarAccess.getVarsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommands
entryRuleCommands 
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getCommandsAccess().getCommandeAssignment()); }
(rule__Commands__CommandeAssignment)
{ after(grammarAccess.getCommandsAccess().getCommandeAssignment()); }
)
(
{ before(grammarAccess.getCommandsAccess().getCommandeAssignment()); }
(rule__Commands__CommandeAssignment)*
{ after(grammarAccess.getCommandsAccess().getCommandeAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getAlternatives()); }
(rule__Command__Alternatives)
{ after(grammarAccess.getCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandWhile
entryRuleCommandWhile 
:
{ before(grammarAccess.getCommandWhileRule()); }
	 ruleCommandWhile
{ after(grammarAccess.getCommandWhileRule()); } 
	 EOF 
;

// Rule CommandWhile
ruleCommandWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandWhileAccess().getGroup()); }
(rule__CommandWhile__Group__0)
{ after(grammarAccess.getCommandWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandIf
entryRuleCommandIf 
:
{ before(grammarAccess.getCommandIfRule()); }
	 ruleCommandIf
{ after(grammarAccess.getCommandIfRule()); } 
	 EOF 
;

// Rule CommandIf
ruleCommandIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandIfAccess().getGroup()); }
(rule__CommandIf__Group__0)
{ after(grammarAccess.getCommandIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandForEach
entryRuleCommandForEach 
:
{ before(grammarAccess.getCommandForEachRule()); }
	 ruleCommandForEach
{ after(grammarAccess.getCommandForEachRule()); } 
	 EOF 
;

// Rule CommandForEach
ruleCommandForEach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandForEachAccess().getGroup()); }
(rule__CommandForEach__Group__0)
{ after(grammarAccess.getCommandForEachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprs
entryRuleExprs 
:
{ before(grammarAccess.getExprsRule()); }
	 ruleExprs
{ after(grammarAccess.getExprsRule()); } 
	 EOF 
;

// Rule Exprs
ruleExprs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprsAccess().getGroup()); }
(rule__Exprs__Group__0)
{ after(grammarAccess.getExprsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAlternatives()); }
(rule__Expr__Alternatives)
{ after(grammarAccess.getExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprSimple
entryRuleExprSimple 
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
(rule__ExprSimple__Alternatives)
{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAnd
entryRuleExprAnd 
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAndAccess().getGroup()); }
(rule__ExprAnd__Group__0)
{ after(grammarAccess.getExprAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprOr
entryRuleExprOr 
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprOrAccess().getGroup()); }
(rule__ExprOr__Group__0)
{ after(grammarAccess.getExprOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprNot
entryRuleExprNot 
:
{ before(grammarAccess.getExprNotRule()); }
	 ruleExprNot
{ after(grammarAccess.getExprNotRule()); } 
	 EOF 
;

// Rule ExprNot
ruleExprNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprNotAccess().getGroup()); }
(rule__ExprNot__Group__0)
{ after(grammarAccess.getExprNotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprEq
entryRuleExprEq 
:
{ before(grammarAccess.getExprEqRule()); }
	 ruleExprEq
{ after(grammarAccess.getExprEqRule()); } 
	 EOF 
;

// Rule ExprEq
ruleExprEq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprEqAccess().getAlternatives()); }
(rule__ExprEq__Alternatives)
{ after(grammarAccess.getExprEqAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Command__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_0()); }
(rule__Command__Group_0__0)
{ after(grammarAccess.getCommandAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getGroup_1()); }
(rule__Command__Group_1__0)
{ after(grammarAccess.getCommandAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getCmdWhileAssignment_2()); }
(rule__Command__CmdWhileAssignment_2)
{ after(grammarAccess.getCommandAccess().getCmdWhileAssignment_2()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getCmdIfAssignment_3()); }
(rule__Command__CmdIfAssignment_3)
{ after(grammarAccess.getCommandAccess().getCmdIfAssignment_3()); }
)

    |(
{ before(grammarAccess.getCommandAccess().getCmdForEachAssignment_4()); }
(rule__Command__CmdForEachAssignment_4)
{ after(grammarAccess.getCommandAccess().getCmdForEachAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getWAssignment_0_0()); }
(rule__CommandWhile__WAssignment_0_0)
{ after(grammarAccess.getCommandWhileAccess().getWAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getCommandWhileAccess().getForKeyword_0_1()); }

	'for' 

{ after(grammarAccess.getCommandWhileAccess().getForKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_0()); }
(rule__Expr__Group_0__0)
{ after(grammarAccess.getExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExprAccess().getExprAndAssignment_1()); }
(rule__Expr__ExprAndAssignment_1)
{ after(grammarAccess.getExprAccess().getExprAndAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getAlternatives_0()); }
(rule__ExprSimple__Alternatives_0)
{ after(grammarAccess.getExprSimpleAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_1()); }
(rule__ExprSimple__Group_1__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_2()); }
(rule__ExprSimple__Group_2__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_3()); }
(rule__ExprSimple__Group_3__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_4()); }
(rule__ExprSimple__Group_4__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getGroup_5()); }
(rule__ExprSimple__Group_5__0)
{ after(grammarAccess.getExprSimpleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getNilAssignment_0_0()); }
(rule__ExprSimple__NilAssignment_0_0)
{ after(grammarAccess.getExprSimpleAccess().getNilAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getVariAssignment_0_1()); }
(rule__ExprSimple__VariAssignment_0_1)
{ after(grammarAccess.getExprSimpleAccess().getVariAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getExprSimpleAccess().getSymbAssignment_0_2()); }
(rule__ExprSimple__SymbAssignment_0_2)
{ after(grammarAccess.getExprSimpleAccess().getSymbAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getGroup_0()); }
(rule__ExprEq__Group_0__0)
{ after(grammarAccess.getExprEqAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExprEqAccess().getGroup_1()); }
(rule__ExprEq__Group_1__0)
{ after(grammarAccess.getExprEqAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomAssignment_1()); }
(rule__Function__NomAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNomAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
(rule__Function__DefinitionAssignment_3)
{ after(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }

	'read' 

{ after(grammarAccess.getDefinitionAccess().getReadKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getInputsAssignment_1()); }
(rule__Definition__InputsAssignment_1)
{ after(grammarAccess.getDefinitionAccess().getInputsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommandesAssignment_3()); }
(rule__Definition__CommandesAssignment_3)
{ after(grammarAccess.getDefinitionAccess().getCommandesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }

	'%' 

{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__5__Impl
	rule__Definition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }

	'write' 

{ after(grammarAccess.getDefinitionAccess().getWriteKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Definition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getOutputsAssignment_6()); }
(rule__Definition__OutputsAssignment_6)
{ after(grammarAccess.getDefinitionAccess().getOutputsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Input__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getGroup_0()); }
(rule__Input__Group_0__0)*
{ after(grammarAccess.getInputAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVarInAssignment_1()); }
(rule__Input__VarInAssignment_1)
{ after(grammarAccess.getInputAccess().getVarInAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Input__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__0__Impl
	rule__Input__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVarInAssignment_0_0()); }
(rule__Input__VarInAssignment_0_0)
{ after(grammarAccess.getInputAccess().getVarInAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Input__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getInputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Output__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getGroup_0()); }
(rule__Output__Group_0__0)*
{ after(grammarAccess.getOutputAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVarOutAssignment_1()); }
(rule__Output__VarOutAssignment_1)
{ after(grammarAccess.getOutputAccess().getVarOutAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Output__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__0__Impl
	rule__Output__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVarOutAssignment_0_0()); }
(rule__Output__VarOutAssignment_0_0)
{ after(grammarAccess.getOutputAccess().getVarOutAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Output__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getOutputAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vars__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__0__Impl
	rule__Vars__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getGroup_0()); }
(rule__Vars__Group_0__0)*
{ after(grammarAccess.getVarsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarGenAssignment_1()); }
(rule__Vars__VarGenAssignment_1)
{ after(grammarAccess.getVarsAccess().getVarGenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vars__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_0__0__Impl
	rule__Vars__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarGenAssignment_0_0()); }
(rule__Vars__VarGenAssignment_0_0)
{ after(grammarAccess.getVarsAccess().getVarGenAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vars__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vars__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getVarsAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopAssignment_0_0()); }
(rule__Command__NopAssignment_0_0)
{ after(grammarAccess.getCommandAccess().getNopAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__0__Impl
	rule__Command__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVarsAssignment_1_0()); }
(rule__Command__VarsAssignment_1_0)
{ after(grammarAccess.getCommandAccess().getVarsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__1__Impl
	rule__Command__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_1()); }

	':=' 

{ after(grammarAccess.getCommandAccess().getColonEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__2__Impl
	rule__Command__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExprsAssignment_1_2()); }
(rule__Command__ExprsAssignment_1_2)
{ after(grammarAccess.getCommandAccess().getExprsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_1_3()); }

	';' 

{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CommandWhile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandWhile__Group__0__Impl
	rule__CommandWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getAlternatives_0()); }
(rule__CommandWhile__Alternatives_0)
{ after(grammarAccess.getCommandWhileAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandWhile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandWhile__Group__1__Impl
	rule__CommandWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getExprAssignment_1()); }
(rule__CommandWhile__ExprAssignment_1)
{ after(grammarAccess.getCommandWhileAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandWhile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandWhile__Group__2__Impl
	rule__CommandWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getCommandWhileAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandWhile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandWhile__Group__3__Impl
	rule__CommandWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getCmdsAssignment_3()); }
(rule__CommandWhile__CmdsAssignment_3)
{ after(grammarAccess.getCommandWhileAccess().getCmdsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandWhile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandWhile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getOdKeyword_4()); }

	'od' 

{ after(grammarAccess.getCommandWhileAccess().getOdKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CommandIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__0__Impl
	rule__CommandIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getCommandIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__1__Impl
	rule__CommandIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCondAssignment_1()); }
(rule__CommandIf__CondAssignment_1)
{ after(grammarAccess.getCommandIfAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__2__Impl
	rule__CommandIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getCommandIfAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__3__Impl
	rule__CommandIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCmdsThenAssignment_3()); }
(rule__CommandIf__CmdsThenAssignment_3)
{ after(grammarAccess.getCommandIfAccess().getCmdsThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__4__Impl
	rule__CommandIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getGroup_4()); }
(rule__CommandIf__Group_4__0)?
{ after(grammarAccess.getCommandIfAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getFiKeyword_5()); }

	'fi' 

{ after(grammarAccess.getCommandIfAccess().getFiKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CommandIf__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group_4__0__Impl
	rule__CommandIf__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getElseKeyword_4_0()); }

	'else' 

{ after(grammarAccess.getCommandIfAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandIf__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandIf__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCmdsElseAssignment_4_1()); }
(rule__CommandIf__CmdsElseAssignment_4_1)
{ after(grammarAccess.getCommandIfAccess().getCmdsElseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommandForEach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__0__Impl
	rule__CommandForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getCommandForEachAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__1__Impl
	rule__CommandForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getElemAssignment_1()); }
(rule__CommandForEach__ElemAssignment_1)
{ after(grammarAccess.getCommandForEachAccess().getElemAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__2__Impl
	rule__CommandForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getCommandForEachAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__3__Impl
	rule__CommandForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getEnsembAssignment_3()); }
(rule__CommandForEach__EnsembAssignment_3)
{ after(grammarAccess.getCommandForEachAccess().getEnsembAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__4__Impl
	rule__CommandForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getCommandForEachAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__5__Impl
	rule__CommandForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getCmdsAssignment_5()); }
(rule__CommandForEach__CmdsAssignment_5)
{ after(grammarAccess.getCommandForEachAccess().getCmdsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandForEach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandForEach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getOdKeyword_6()); }

	'od' 

{ after(grammarAccess.getCommandForEachAccess().getOdKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Exprs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group__0__Impl
	rule__Exprs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getGroup_0()); }
(rule__Exprs__Group_0__0)*
{ after(grammarAccess.getExprsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpGenAssignment_1()); }
(rule__Exprs__ExpGenAssignment_1)
{ after(grammarAccess.getExprsAccess().getExpGenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exprs__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getGroup_0_0()); }
(rule__Exprs__Group_0_0__0)
{ after(grammarAccess.getExprsAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Exprs__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group_0_0__0__Impl
	rule__Exprs__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpGenAssignment_0_0_0()); }
(rule__Exprs__ExpGenAssignment_0_0_0)
{ after(grammarAccess.getExprsAccess().getExpGenAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exprs__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exprs__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getCommaKeyword_0_0_1()); }

	',' 

{ after(grammarAccess.getExprsAccess().getCommaKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprSimpAssignment_0_0()); }
(rule__Expr__ExprSimpAssignment_0_0)
{ after(grammarAccess.getExprAccess().getExprSimpAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExprSimple__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1__0__Impl
	rule__ExprSimple__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1__1__Impl
	rule__ExprSimple__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprConsAssignment_1_1()); }
(rule__ExprSimple__ExprConsAssignment_1_1)
{ after(grammarAccess.getExprSimpleAccess().getExprConsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1__2__Impl
	rule__ExprSimple__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprConsAttAssignment_1_2()); }
(rule__ExprSimple__ExprConsAttAssignment_1_2)
{ after(grammarAccess.getExprSimpleAccess().getExprConsAttAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExprSimple__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_2__0__Impl
	rule__ExprSimple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_2__1__Impl
	rule__ExprSimple__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprListAssignment_2_1()); }
(rule__ExprSimple__ExprListAssignment_2_1)
{ after(grammarAccess.getExprSimpleAccess().getExprListAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_2__2__Impl
	rule__ExprSimple__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprListAttAssignment_2_2()); }
(rule__ExprSimple__ExprListAttAssignment_2_2)
{ after(grammarAccess.getExprSimpleAccess().getExprListAttAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExprSimple__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_3__0__Impl
	rule__ExprSimple__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_3__1__Impl
	rule__ExprSimple__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprHeadAssignment_3_1()); }
(rule__ExprSimple__ExprHeadAssignment_3_1)
{ after(grammarAccess.getExprSimpleAccess().getExprHeadAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_3__2__Impl
	rule__ExprSimple__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprHeadAttAssignment_3_2()); }
(rule__ExprSimple__ExprHeadAttAssignment_3_2)
{ after(grammarAccess.getExprSimpleAccess().getExprHeadAttAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExprSimple__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_4__0__Impl
	rule__ExprSimple__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_4__1__Impl
	rule__ExprSimple__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprTailAssignment_4_1()); }
(rule__ExprSimple__ExprTailAssignment_4_1)
{ after(grammarAccess.getExprSimpleAccess().getExprTailAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_4__2__Impl
	rule__ExprSimple__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprTailAttAssignment_4_2()); }
(rule__ExprSimple__ExprTailAttAssignment_4_2)
{ after(grammarAccess.getExprSimpleAccess().getExprTailAttAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_4_3()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExprSimple__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_5__0__Impl
	rule__ExprSimple__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_5__1__Impl
	rule__ExprSimple__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getNomSymbAssignment_5_1()); }
(rule__ExprSimple__NomSymbAssignment_5_1)
{ after(grammarAccess.getExprSimpleAccess().getNomSymbAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_5__2__Impl
	rule__ExprSimple__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getSymbAttAssignment_5_2()); }
(rule__ExprSimple__SymbAttAssignment_5_2)
{ after(grammarAccess.getExprSimpleAccess().getSymbAttAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSimple__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_5_3()); }

	')' 

{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExprAnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprOrAssignment_0()); }
(rule__ExprAnd__ExprOrAssignment_0)
{ after(grammarAccess.getExprAndAccess().getExprOrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getGroup_1()); }
(rule__ExprAnd__Group_1__0)?
{ after(grammarAccess.getExprAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__0__Impl
	rule__ExprAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndAssignment_1_0()); }
(rule__ExprAnd__ExprAndAssignment_1_0)
{ after(grammarAccess.getExprAndAccess().getExprAndAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndAttAssignment_1_1()); }
(rule__ExprAnd__ExprAndAttAssignment_1_1)
{ after(grammarAccess.getExprAndAccess().getExprAndAttAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprNotAssignment_0()); }
(rule__ExprOr__ExprNotAssignment_0)
{ after(grammarAccess.getExprOrAccess().getExprNotAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getGroup_1()); }
(rule__ExprOr__Group_1__0)?
{ after(grammarAccess.getExprOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprOr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__0__Impl
	rule__ExprOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrAssignment_1_0()); }
(rule__ExprOr__ExprOrAssignment_1_0)
{ after(grammarAccess.getExprOrAccess().getExprOrAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrAttAssignment_1_1()); }
(rule__ExprOr__ExprOrAttAssignment_1_1)
{ after(grammarAccess.getExprOrAccess().getExprOrAttAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprNot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprNot__Group__0__Impl
	rule__ExprNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getNotAssignment_0()); }
(rule__ExprNot__NotAssignment_0)?
{ after(grammarAccess.getExprNotAccess().getNotAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getExprEqAssignment_1()); }
(rule__ExprNot__ExprEqAssignment_1)
{ after(grammarAccess.getExprNotAccess().getExprEqAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprEq__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_0__0__Impl
	rule__ExprEq__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getExprEqAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_0__1__Impl
	rule__ExprEq__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprAssignment_0_1()); }
(rule__ExprEq__ExprAssignment_0_1)
{ after(grammarAccess.getExprEqAccess().getExprAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getExprEqAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprEq__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_1__0__Impl
	rule__ExprEq__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprSim1Assignment_1_0()); }
(rule__ExprEq__ExprSim1Assignment_1_0)
{ after(grammarAccess.getExprEqAccess().getExprSim1Assignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_1__1__Impl
	rule__ExprEq__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1_1()); }

	'=?' 

{ after(grammarAccess.getExprEqAccess().getEqualsSignQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEq__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEq__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprSim2Assignment_1_2()); }
(rule__ExprEq__ExprSim2Assignment_1_2)
{ after(grammarAccess.getExprEqAccess().getExprSim2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__FonctionsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getFonctionsFunctionParserRuleCall_0()); }
	ruleFunction{ after(grammarAccess.getProgramAccess().getFonctionsFunctionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NomAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNomSYMBOLTerminalRuleCall_1_0()); }
	RULE_SYMBOL{ after(grammarAccess.getFunctionAccess().getNomSYMBOLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
	ruleDefinition{ after(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__InputsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getInputsInputParserRuleCall_1_0()); }
	ruleInput{ after(grammarAccess.getDefinitionAccess().getInputsInputParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__CommandesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getCommandesCommandsParserRuleCall_3_0()); }
	ruleCommands{ after(grammarAccess.getDefinitionAccess().getCommandesCommandsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__OutputsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getOutputsOutputParserRuleCall_6_0()); }
	ruleOutput{ after(grammarAccess.getDefinitionAccess().getOutputsOutputParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarInAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVarInVARIABLETerminalRuleCall_0_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getInputAccess().getVarInVARIABLETerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Input__VarInAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputAccess().getVarInVARIABLETerminalRuleCall_1_0()); }
	RULE_VARIABLE{ after(grammarAccess.getInputAccess().getVarInVARIABLETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarOutAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVarOutVARIABLETerminalRuleCall_0_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getOutputAccess().getVarOutVARIABLETerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Output__VarOutAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputAccess().getVarOutVARIABLETerminalRuleCall_1_0()); }
	RULE_VARIABLE{ after(grammarAccess.getOutputAccess().getVarOutVARIABLETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VarGenAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarGenVARIABLETerminalRuleCall_0_0_0()); }
	RULE_VARIABLE{ after(grammarAccess.getVarsAccess().getVarGenVARIABLETerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vars__VarGenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarsAccess().getVarGenVARIABLETerminalRuleCall_1_0()); }
	RULE_VARIABLE{ after(grammarAccess.getVarsAccess().getVarGenVARIABLETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandsAccess().getCommandeCommandParserRuleCall_0()); }
	ruleCommand{ after(grammarAccess.getCommandsAccess().getCommandeCommandParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NopAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNopNopKeyword_0_0_0()); }
(
{ before(grammarAccess.getCommandAccess().getNopNopKeyword_0_0_0()); }

	'nop' 

{ after(grammarAccess.getCommandAccess().getNopNopKeyword_0_0_0()); }
)

{ after(grammarAccess.getCommandAccess().getNopNopKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__VarsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVarsVarsParserRuleCall_1_0_0()); }
	ruleVars{ after(grammarAccess.getCommandAccess().getVarsVarsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__ExprsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getExprsExprsParserRuleCall_1_2_0()); }
	ruleExprs{ after(grammarAccess.getCommandAccess().getExprsExprsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdWhileAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCmdWhileCommandWhileParserRuleCall_2_0()); }
	ruleCommandWhile{ after(grammarAccess.getCommandAccess().getCmdWhileCommandWhileParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdIfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCmdIfCommandIfParserRuleCall_3_0()); }
	ruleCommandIf{ after(grammarAccess.getCommandAccess().getCmdIfCommandIfParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CmdForEachAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCmdForEachCommandForEachParserRuleCall_4_0()); }
	ruleCommandForEach{ after(grammarAccess.getCommandAccess().getCmdForEachCommandForEachParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__WAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getWWhileKeyword_0_0_0()); }
(
{ before(grammarAccess.getCommandWhileAccess().getWWhileKeyword_0_0_0()); }

	'while' 

{ after(grammarAccess.getCommandWhileAccess().getWWhileKeyword_0_0_0()); }
)

{ after(grammarAccess.getCommandWhileAccess().getWWhileKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getExprExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getCommandWhileAccess().getExprExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandWhile__CmdsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandWhileAccess().getCmdsCommandsParserRuleCall_3_0()); }
	ruleCommands{ after(grammarAccess.getCommandWhileAccess().getCmdsCommandsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCondExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getCommandIfAccess().getCondExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__CmdsThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCmdsThenCommandsParserRuleCall_3_0()); }
	ruleCommands{ after(grammarAccess.getCommandIfAccess().getCmdsThenCommandsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandIf__CmdsElseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandIfAccess().getCmdsElseCommandsParserRuleCall_4_1_0()); }
	ruleCommands{ after(grammarAccess.getCommandIfAccess().getCmdsElseCommandsParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__ElemAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getElemExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getCommandForEachAccess().getElemExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__EnsembAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getEnsembExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getCommandForEachAccess().getEnsembExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandForEach__CmdsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandForEachAccess().getCmdsCommandsParserRuleCall_5_0()); }
	ruleCommands{ after(grammarAccess.getCommandForEachAccess().getCmdsCommandsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExpGenAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpGenExprParserRuleCall_0_0_0_0()); }
	ruleExpr{ after(grammarAccess.getExprsAccess().getExpGenExprParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exprs__ExpGenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprsAccess().getExpGenExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getExprsAccess().getExpGenExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprSimpAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprSimpExprSimpleParserRuleCall_0_0_0()); }
	ruleExprSimple{ after(grammarAccess.getExprAccess().getExprSimpExprSimpleParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprAndAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getExprAndExprAndParserRuleCall_1_0()); }
	ruleExprAnd{ after(grammarAccess.getExprAccess().getExprAndExprAndParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__NilAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getNilNilKeyword_0_0_0()); }
(
{ before(grammarAccess.getExprSimpleAccess().getNilNilKeyword_0_0_0()); }

	'nil' 

{ after(grammarAccess.getExprSimpleAccess().getNilNilKeyword_0_0_0()); }
)

{ after(grammarAccess.getExprSimpleAccess().getNilNilKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__VariAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getVariVARIABLETerminalRuleCall_0_1_0()); }
	RULE_VARIABLE{ after(grammarAccess.getExprSimpleAccess().getVariVARIABLETerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__SymbAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getSymbSYMBOLTerminalRuleCall_0_2_0()); }
	RULE_SYMBOL{ after(grammarAccess.getExprSimpleAccess().getSymbSYMBOLTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprConsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprConsConsKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprSimpleAccess().getExprConsConsKeyword_1_1_0()); }

	'cons' 

{ after(grammarAccess.getExprSimpleAccess().getExprConsConsKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprSimpleAccess().getExprConsConsKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprConsAttAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprConsAttExprParserRuleCall_1_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getExprConsAttExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprListAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprListListKeyword_2_1_0()); }
(
{ before(grammarAccess.getExprSimpleAccess().getExprListListKeyword_2_1_0()); }

	'list' 

{ after(grammarAccess.getExprSimpleAccess().getExprListListKeyword_2_1_0()); }
)

{ after(grammarAccess.getExprSimpleAccess().getExprListListKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprListAttAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprListAttExprParserRuleCall_2_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getExprListAttExprParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprHeadAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprHeadHdKeyword_3_1_0()); }
(
{ before(grammarAccess.getExprSimpleAccess().getExprHeadHdKeyword_3_1_0()); }

	'hd' 

{ after(grammarAccess.getExprSimpleAccess().getExprHeadHdKeyword_3_1_0()); }
)

{ after(grammarAccess.getExprSimpleAccess().getExprHeadHdKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprHeadAttAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprHeadAttExprParserRuleCall_3_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getExprHeadAttExprParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprTailAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprTailTlKeyword_4_1_0()); }
(
{ before(grammarAccess.getExprSimpleAccess().getExprTailTlKeyword_4_1_0()); }

	'tl' 

{ after(grammarAccess.getExprSimpleAccess().getExprTailTlKeyword_4_1_0()); }
)

{ after(grammarAccess.getExprSimpleAccess().getExprTailTlKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprTailAttAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getExprTailAttExprParserRuleCall_4_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getExprTailAttExprParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__NomSymbAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getNomSymbSYMBOLTerminalRuleCall_5_1_0()); }
	RULE_SYMBOL{ after(grammarAccess.getExprSimpleAccess().getNomSymbSYMBOLTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__SymbAttAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSimpleAccess().getSymbAttExprParserRuleCall_5_2_0()); }
	ruleExpr{ after(grammarAccess.getExprSimpleAccess().getSymbAttExprParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__ExprOrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprOrExprOrParserRuleCall_0_0()); }
	ruleExprOr{ after(grammarAccess.getExprAndAccess().getExprOrExprOrParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__ExprAndAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndAndKeyword_1_0_0()); }
(
{ before(grammarAccess.getExprAndAccess().getExprAndAndKeyword_1_0_0()); }

	'and' 

{ after(grammarAccess.getExprAndAccess().getExprAndAndKeyword_1_0_0()); }
)

{ after(grammarAccess.getExprAndAccess().getExprAndAndKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__ExprAndAttAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndAttExprAndParserRuleCall_1_1_0()); }
	ruleExprAnd{ after(grammarAccess.getExprAndAccess().getExprAndAttExprAndParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__ExprNotAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprNotExprNotParserRuleCall_0_0()); }
	ruleExprNot{ after(grammarAccess.getExprOrAccess().getExprNotExprNotParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__ExprOrAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrOrKeyword_1_0_0()); }
(
{ before(grammarAccess.getExprOrAccess().getExprOrOrKeyword_1_0_0()); }

	'or' 

{ after(grammarAccess.getExprOrAccess().getExprOrOrKeyword_1_0_0()); }
)

{ after(grammarAccess.getExprOrAccess().getExprOrOrKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__ExprOrAttAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrAttExprOrParserRuleCall_1_1_0()); }
	ruleExprOr{ after(grammarAccess.getExprOrAccess().getExprOrAttExprOrParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__NotAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getNotNotKeyword_0_0()); }
(
{ before(grammarAccess.getExprNotAccess().getNotNotKeyword_0_0()); }

	'not' 

{ after(grammarAccess.getExprNotAccess().getNotNotKeyword_0_0()); }
)

{ after(grammarAccess.getExprNotAccess().getNotNotKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__ExprEqAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getExprEqExprEqParserRuleCall_1_0()); }
	ruleExprEq{ after(grammarAccess.getExprNotAccess().getExprEqExprEqParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprExprParserRuleCall_0_1_0()); }
	ruleExpr{ after(grammarAccess.getExprEqAccess().getExprExprParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprSim1Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprSim1ExprSimpleParserRuleCall_1_0_0()); }
	ruleExprSimple{ after(grammarAccess.getExprEqAccess().getExprSim1ExprSimpleParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEq__ExprSim2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqAccess().getExprSim2ExprSimpleParserRuleCall_1_2_0()); }
	ruleExprSimple{ after(grammarAccess.getExprEqAccess().getExprSim2ExprSimpleParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z'|'0'..'9'|'->'|'-'|'+'|'&'|'.'|'/'|'_')*;

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9'|'_'|'->'|'-'|'+'|'&'|'.'|'/')*;

RULE_LC : ' '*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


